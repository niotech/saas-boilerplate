---
name: Build and Push Images to GCP

on:
    push:
        branches:
          - master
jobs:
    build-push-gcr:
        name: Build and Push to GCP
        runs-on: ubuntu-20.04
        steps:
            - name: checkout repository
              uses: actions/checkout@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Set up Google Cloud SDK
              uses: google-github-actions/setup-gcloud@v2
              with:
                project_id: ${{ secrets.GCP_PROJECT_ID }}
                install_components: gcloud

            - name: Authenticate to Google Cloud
              run: echo "${{ secrets.GCP_SA_KEY }}" > $HOME/gcloud.json

            - name: Set GOOGLE_APPLICATION_CREDENTIALS
              run: echo "GOOGLE_APPLICATION_CREDENTIALS=$HOME/gcloud.json" >> $GITHUB_ENV

            - name: Log in to GCR
              run: |
                gcloud auth activate-service-account --key-file=$HOME/gcloud.json
                gcloud auth configure-docker --quiet

            - name: Build Docker images using Docker Compose
              run: docker compose -f docker-compose.yml build

            - name: Push Docker saas/backend image to Google Container Registry
              env:
                IMAGE_NAME: saas/backend
              run:
                IMAGE_TAG=gcr.io/${{ secrets.GCP_PROJECT_ID }}/$IMAGE_NAME:latest
                docker tag $IMAGE_TAG
                docker push $IMAGE_TAG

            - name: Push Docker saas-boilerplate-ssm-editor image to Google Container Registry
              env:
                IMAGE_NAME: saas-boilerplate-ssm-editor
              run:
                IMAGE_TAG=gcr.io/${{ secrets.GCP_PROJECT_ID }}/$IMAGE_NAME:latest
                docker tag $IMAGE_TAG
                docker push $IMAGE_TAG

            - name: Push Docker saas-boilerplate-workers image to Google Container Registry
              env:
                IMAGE_NAME: saas-boilerplate-workers
              run:
                IMAGE_TAG=gcr.io/${{ secrets.GCP_PROJECT_ID }}/$IMAGE_NAME:latest
                docker tag $IMAGE_TAG
                docker push $IMAGE_TAG
